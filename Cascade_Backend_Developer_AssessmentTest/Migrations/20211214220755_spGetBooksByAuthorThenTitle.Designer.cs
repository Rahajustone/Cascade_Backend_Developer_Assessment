// <auto-generated />
using Cascade_Backend_Developer_AssessmentTest.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Cascade_Backend_Developer_AssessmentTest.Migrations
{
    [DbContext(typeof(BooksContext))]
    [Migration("20211214220755_spGetBooksByAuthorThenTitle")]
    partial class spGetBooksByAuthorThenTitle
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("Cascade_Backend_Developer_AssessmentTest.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AuthorFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthorLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Publisher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorFirstName = "Wilder",
                            AuthorLastName = "Torres",
                            Price = 33.5m,
                            Publisher = "GEEKULAR",
                            Title = "Testable book"
                        },
                        new
                        {
                            Id = 2,
                            AuthorFirstName = "Obrien",
                            AuthorLastName = "Goodman",
                            Price = 125.5m,
                            Publisher = "VERBUS",
                            Title = "Being goog boy"
                        },
                        new
                        {
                            Id = 3,
                            AuthorFirstName = "Obrien",
                            AuthorLastName = "Goodman",
                            Price = 125.5m,
                            Publisher = "VERBUS",
                            Title = "Being goog boy"
                        },
                        new
                        {
                            Id = 4,
                            AuthorFirstName = "Hello",
                            AuthorLastName = "Sadaf",
                            Price = 125.5m,
                            Publisher = "Ahmet",
                            Title = "Being goog boy"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
